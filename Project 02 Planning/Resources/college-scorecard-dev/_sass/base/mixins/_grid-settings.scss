@import '../../neat/neat-helpers';

$max-width: em(1230) !default;

// Breakpoints
$weensy: em(360);
$teensy: em(380);
$tiny: em(480);
$small: em(600);
$small-plus: em(640);
$medium: em(768);
$large: em(990);
$huge: em(1230);

$weensy-down: new-breakpoint(max-width $weensy);
$teensy-down: new-breakpoint(max-width $teensy);
$teensy-up: new-breakpoint(min-width $teensy);
$tiny-up: new-breakpoint(min-width $tiny);
$small-down: new-breakpoint(min-width $small);
$small-up: new-breakpoint(min-width $small);
$small-plus-up: new-breakpoint(min-width $small-plus);
$medium-down: new-breakpoint(max-width $medium);
$medium-up: new-breakpoint(min-width $medium);
$large-up: new-breakpoint(min-width $large);
$huge-up: new-breakpoint(min-width $huge);

@mixin respond-to($media) {
  @if $media == weensy-down {
    @media only screen and (max-width: $weensy) { @content; }
  }
  @else if $media == teensy-down {
    @media only screen and (max-width: $teensy) { @content; }
  }
  @else if $media == teensy-up {
    @media only screen and (min-width: $teensy) { @content; }
  }
  @else if $media == tiny-up {
    @media only screen and (min-width: $tiny) { @content; }
  }
  @else if $media == small-down {
    @media only screen and (max-width: $small) { @content; }
  }
  @else if $media == small-up {
    @media only screen and (min-width: $small) { @content; }
  }
  @else if $media == small-plus-up {
    @media only screen and (min-width: $small-plus) { @content; }
  }
  @else if $media == medium-down {
    @media only screen and (max-width: $medium) { @content; }
  }
  @else if $media == medium-up {
    @media only screen and (min-width: $medium) { @content; }
  }
  @else if $media == large-up {
    @media only screen and (min-width: $large) { @content; }
  }
  @else if $media == huge-up {
    @media only screen and (min-width: $huge) { @content; }
  }
}

// Outer container with padding based on media queries

@mixin padded-container($local-max-width: $max-width) {
  @include outer-container($local-max-width);
  padding: {
    left: em(20);
    right: em(20);
  }

  @include respond-to(medium-up) {
    padding: {
      left: em(30);
      right: em(30);
    }
  }
}

// Omega reset
// http://www.joshfry.me/blog/2013/05/13/omega-reset-for-bourbon-neat
@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  &:nth-child(#{$nth}+1) { clear: none }
}
